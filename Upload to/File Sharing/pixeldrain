#!/bin/bash

# Function to upload file to Pixeldrain
upload_file() {
    FILE_PATH="$1"
    API_KEY_FILE="$HOME/.config/.pixeldrain_api_key.conf"

    # Check if API key file exists, otherwise prompt for API key
    if [[ -f "$API_KEY_FILE" ]]; then
        API_KEY=$(<"$API_KEY_FILE")
    else
        API_KEY=$(zenity --entry --title "Pixeldrain API Key" --text "Enter your Pixeldrain API Key:")
        if [[ $? -ne 0 || -z "$API_KEY" ]]; then
            zenity --error --title "Error" --text "API Key not provided. Upload cancelled."
            exit 1
        fi
        echo "$API_KEY" > "$API_KEY_FILE"
        chmod 600 "$API_KEY_FILE"  # Set permissions to 600 for security
    fi

    # Upload file using curl
    RESPONSE=$(curl -s -T "${FILE_PATH}" -u ":${API_KEY}" https://pixeldrain.com/api/file/)

    # Check if upload was successful
    if echo "$RESPONSE" | grep -q '"id":"'; then
        # Extract file details from response
        ID=$(echo "$RESPONSE" | jq -r '.id')
        NAME=$(echo "$RESPONSE" | jq -r '.name')
        SIZE=$(echo "$RESPONSE" | jq -r '.size')

        # Generate the download URL
        DOWNLOAD_URL="https://pixeldrain.com/u/${ID}"

        # Display the result and copy to clipboard
        echo "$DOWNLOAD_URL" | xclip -selection clipboard
        zenity --info --title "File Upload Success" --text "File uploaded successfully.\n\nName: $NAME\nSize: $SIZE\nDownload URL: $DOWNLOAD_URL\n\n(Download URL copied to clipboard)"
    else
        zenity --error --title "File Upload Error" --text "Failed to upload the file."
        exit 1
    fi
}

# Call the function with the file from Nautilus context menu
upload_file "$1"
