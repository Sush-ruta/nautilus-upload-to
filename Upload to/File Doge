#!/bin/bash

# Function to upload file to File Doge
upload_file() {
    FILE_PATH="$1"
    LOG_FILE="$HOME/.filedoge_uploads.log"
    TEMP_ZIP="/tmp/temp_upload.zip"

    # Check if file size is greater than 200MB
    if [ $(stat -c%s "$FILE_PATH") -gt 209715200 ]; then
        zenity --error --title="Error" --text="Only files less than 200MB are allowed."
        exit 1
    fi

    # Prepare data for upload
    if [ -d "$FILE_PATH" ]; then
        zenity --info --title="Directory Upload" --text="Given path is a directory, proceeding to upload as zip."
        zip -r "$TEMP_ZIP" "$FILE_PATH"
        FILE_PATH="$TEMP_ZIP"
    fi

    # Upload the file
    RESPONSE=$(curl -s -F "file=@$FILE_PATH" "https://api.filedoge.com/upload")

    # Check if response contains error
    if echo "$RESPONSE" | grep -q '"error":'; then
        zenity --error --title="Error" --text="Failed to upload the file.\n$RESPONSE"
        exit 1
    fi

    # Extract download URL, file token, and delete token from response
    FILE_TOKEN=$(echo "$RESPONSE" | grep -oP '(?<="token":")[^"]*')
    DELETE_TOKEN=$(echo "$RESPONSE" | grep -oP '(?<="deleteToken":")[^"]*')

    if [ -z "$FILE_TOKEN" ] || [ -z "$DELETE_TOKEN" ]; then
        zenity --error --title="Error" --text="Failed to upload the file."
        exit 1
    fi

    FULL_URL="https://api.filedoge.com/download/$FILE_TOKEN"
    
    # Display the result and copy to clipboard
    echo "$FULL_URL" | xclip -selection clipboard
    zenity --info --title="Upload Complete" --text="File uploaded successfully.\nLink: $FULL_URL\n(Link copied to clipboard)"

    # Log the file name, file token, and delete token
    echo "$(date +"%Y-%m-%d %H:%M:%S"): $(basename "$FILE_PATH") = \"File Token: $FILE_TOKEN, Delete Token: $DELETE_TOKEN\"" >> "$LOG_FILE"
    
    # Clean up temporary files
    if [ -f "$TEMP_ZIP" ]; then
        rm "$TEMP_ZIP"
    fi
}

# Main script
for FILE in "$@"; do
    upload_file "$FILE"
done
